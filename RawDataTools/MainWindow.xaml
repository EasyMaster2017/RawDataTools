<Window x:Class="RawDataTools.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:core="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:RawDataTools"
        xmlns:Model="clr-namespace:RawDataTools.Model"
        xmlns:ViewModel="clr-namespace:RawDataTools.ViewModel"
        mc:Ignorable="d"
        Title="Raw Data Calculator" Height="750" Width="1100" WindowStartupLocation="CenterScreen"
        >
    <Window.Resources>
        <ObjectDataProvider x:Key="MeasureTypeEnum" MethodName="GetValues" ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="Model:MeasureTypeEnum"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="ExportLanguageEnum" MethodName="GetValues" ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="ViewModel:ExportLanguageEnum"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <!--定义转换器-->
        <local:DoubleStringConverter x:Key="cvtDouble2Str"/>
        <local:ValueToColor x:Key="cvtValue2Color" />
        
        <RoutedUICommand x:Key="Open"/>
        <RoutedUICommand x:Key="Save"/>
        <RoutedUICommand x:Key="SaveAs"/>
        <RoutedUICommand x:Key="Export"/>
        <RoutedUICommand x:Key="Quit"/>
        
        <Style TargetType="TextBox">
            <Setter Property="Height" Value="22"/>
            <Setter Property="Width" Value="80"/>
        </Style>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Gesture="Ctrl+O" Command="{StaticResource Open}"/>
        <KeyBinding Gesture="Ctrl+S" Command="{StaticResource Save}"/>
        <KeyBinding Gesture="Ctrl+A" Command="{StaticResource SaveAs}"/>
        <KeyBinding Gesture="Ctrl+E" Command="{StaticResource Export}"/>
        <KeyBinding Gesture="Ctrl+Q" Command="{StaticResource Quit}"/>
    </Window.InputBindings>
    <Window.CommandBindings>
        <CommandBinding Command="{StaticResource Open}" Executed="Menu_Open_Click"/>
        <CommandBinding Command="{StaticResource Save}" Executed="Menu_Save_Click"/>
        <CommandBinding Command="{StaticResource SaveAs}" Executed="Menu_SaveAs_Click"/>
        <CommandBinding Command="{StaticResource Export}" Executed="Menu_ExportToExcel_Click"/>
        <CommandBinding Command="{StaticResource Quit}" Executed="Menu_Quit_Click" />
    </Window.CommandBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="24"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="22"/>
        </Grid.RowDefinitions>
        <Menu Grid.Row="0">
            <MenuItem Header="文件(_F)">
                <MenuItem Header="打开(_O)" x:Name="Menu_Open" InputGestureText="Ctrl+O" Click="Menu_Open_Click"/>
                <MenuItem Header="保存(_S)" x:Name="Menu_Save" InputGestureText="Ctrl+S" Click="Menu_Save_Click"/>
                <MenuItem Header="另存为(_A)" x:Name="Menu_SaveAs" InputGestureText="Ctrl+A" Click="Menu_SaveAs_Click"/>
                <MenuItem Header="导出原始数据到Excel(_E)" InputGestureText="Ctrl+E" x:Name="Menu_ExportToExcel" Click="Menu_ExportToExcel_Click"/>
                <Separator />
                <MenuItem Header="退出(_Q)" InputGestureText="Ctrl+Q" x:Name="Menu_Quit" Click="Menu_Quit_Click"/>
            </MenuItem>
            <MenuItem Header="工具(_T)" >
                <MenuItem Header="从Excel导入数据(_E)" x:Name="Menu_ImportFromExcel" Click="Menu_ImportFromExcel_Click" />
            </MenuItem>
        </Menu>
        <ToolBar Grid.Row="1">
            <GroupBox Grid.Column="0" Header="工程信息">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="导出时间：" VerticalAlignment="Center"/>
                    <DatePicker x:Name="ExportTimeDP" Text="{Binding ExportDateTime, Mode=TwoWay}"/>
                    <Button x:Name="ArrayBtn" Content="序号自增" Margin="2" VerticalAlignment="Center" Click="ArrayBtn_Click" />
                    <Button x:Name="HeightBtn" Content="调整后视读数" Margin="2" VerticalAlignment="Center" Click="HeightBtn_Click" />
                    <Button x:Name="DistanceBtn" Content="距离微调" Margin="2" VerticalAlignment="Center" Click="DistanceBtn_Click" />
                    <TextBox x:Name="MinDistanceTB" Text="{Binding MinDistance, Converter={StaticResource cvtDouble2Str}}" />
                    <TextBlock Text="-" Height="18" Margin="2"/>
                    <TextBox x:Name="MaxDistanceTB" Text="{Binding MaxDistance, Converter={StaticResource cvtDouble2Str}}"/>
                    <TextBlock Text="可导入数据表：" VerticalAlignment="Center" Margin="4,0,0,0"/>
                    <ComboBox x:Name="SheetNameCB" Width="80" Margin="4" SelectedIndex="0" SelectionChanged="SheetNameCB_SelectionChanged"/>
                    <TextBlock Text="导出语言:" VerticalAlignment="Center" Margin="4,0,0,0"/>
                    <ComboBox x:Name="ExportLanguageCB" Width="80" Margin="4" SelectedIndex="0"  ItemsSource="{Binding Source={StaticResource ExportLanguageEnum}}" />
                </StackPanel>
            </GroupBox>
        </ToolBar>
        <Grid Grid.Row="2">
            <DataGrid x:Name="ShowDataGrid" Grid.Column="1" CellEditEnding="ShowDataGrid_CellEditEnding" ItemsSource="{Binding Path=BIFList}" AutoGenerateColumns="False" SelectionUnit="CellOrRowHeader" CanUserSortColumns="False">
                <DataGrid.Resources>
                    <Style TargetType="{x:Type DataGrid}">
                        <Setter Property="Background" Value="White"/>
                        <Setter Property="FontSize" Value="14"/>
                        <Setter Property="HorizontalGridLinesBrush">
                            <Setter.Value>
                                <SolidColorBrush Color="#333" Opacity="0.2"/>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="VerticalGridLinesBrush">
                            <Setter.Value>
                                <SolidColorBrush Color="#333" Opacity="0.2"/>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    </Style>
                    <Style TargetType="{x:Type DataGridCell}">
                        <Setter Property="Padding" Value="5"/>
                    </Style>
                    <Style x:Key="dgCellRightAlignment" TargetType="{x:Type TextBlock}">
                        <Setter Property="TextAlignment" Value="Right"/>                        
                    </Style>
                    <Style x:Key="dgCellCenterAlignment" TargetType="{x:Type TextBlock}">
                        <Setter Property="TextAlignment" Value="Center"/>
                    </Style>
                    <Style x:Key="dgCellLeftAlignment" TargetType="{x:Type TextBlock}">
                        <Setter Property="TextAlignment" Value="Left"/>
                    </Style>
                </DataGrid.Resources>
                
                <DataGrid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="向前插入行" x:Name="Menu_InsertForward" Click="Menu_InsertForward_Click"/>
                        <MenuItem Header="向后插入行" x:Name="Menu_InsertBackward" Click="Menu_InsertBackward_Click"/>
                        <MenuItem Header="删除当前行" x:Name="Menu_DeleteCurrent" Click="Menu_DeleteCurrent_Click"/>
                        <MenuItem Header="复制(_C)" IsEnabled="False" x:Name="Menu_Copy" Click="Menu_Copy_Click"/>
                        <MenuItem Header="粘贴(_V)" IsEnabled="False" x:Name="Menu_Paste" Click="Menu_Paste_Click"/>
                    </ContextMenu>
                </DataGrid.ContextMenu>
                <DataGrid.Columns>                    
                    <DataGridTextColumn Header="序号" Width="50" Binding="{Binding ArrayNo}" ElementStyle="{StaticResource dgCellRightAlignment}">
                        
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="测点号" Width="120" Binding="{Binding PointNo}" ElementStyle="{StaticResource dgCellCenterAlignment}">

                    </DataGridTextColumn>
                    <DataGridTextColumn Header="高度" Width="120" Binding="{Binding Height, Converter={StaticResource cvtDouble2Str}}" ElementStyle="{StaticResource dgCellRightAlignment}">
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Setter Property="Foreground" Value="{Binding HeightColor}"/>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                        
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="距离" Width="120" Binding="{Binding Distance, Converter={StaticResource cvtDouble2Str}}" ElementStyle="{StaticResource dgCellRightAlignment}">
                        
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="参考点名" Width="80" Binding="{Binding ReferNo}" ElementStyle="{StaticResource dgCellCenterAlignment}">
                        
                    </DataGridTextColumn>
                    <DataGridComboBoxColumn Header="测量方式" Width="80" TextBinding="{Binding MeasureType}" ItemsSource="{Binding Source={StaticResource MeasureTypeEnum}}" SelectedValueBinding="{Binding MeasureTypeEnum}">
                        <DataGridComboBoxColumn.ElementStyle>
                            <Style TargetType="{x:Type ComboBox}">
                                <Setter Property="HorizontalAlignment" Value="Center"/>
                            </Style>
                        </DataGridComboBoxColumn.ElementStyle>
                        <DataGridComboBoxColumn.EditingElementStyle>
                            <Style TargetType="{x:Type ComboBox}">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="Transparent"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush">
                                    <Setter.Value>
                                        <SolidColorBrush Color="Transparent"/>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DataGridComboBoxColumn.EditingElementStyle>
                    </DataGridComboBoxColumn>
                    <DataGridTextColumn Header="高程" Width="120" Binding="{Binding Elevation, Converter={StaticResource cvtDouble2Str}}" ElementStyle="{StaticResource dgCellRightAlignment}">
                        
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="高差" Width="120" Binding="{Binding DeltaHeightDh, Converter={StaticResource cvtDouble2Str}}" ElementStyle="{StaticResource dgCellRightAlignment}">
                        
                    </DataGridTextColumn>
                </DataGrid.Columns>                
            </DataGrid>            
        </Grid>
        <StatusBar x:Name="ShowMsgStatusBar" Grid.Row="3">
            <StatusBarItem Content="{Binding PointFilePath}">
                
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
